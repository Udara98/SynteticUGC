name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 8 * * *'  # Runs at 8:00 AM every day
  workflow_dispatch:  # Allows manual triggering

# Add permissions block
permissions:
  checks: write
  pull-requests: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn clean install -DskipTests -X
    
    - name: Run Tests
      run: mvn test -X
      env:
        MAVEN_OPTS: "-Dmaven.test.failure.ignore=true"
    
    - name: Generate Allure Report
      run: mvn allure:report
    
    - name: Archive Allure Report
      uses: actions/upload-artifact@v3
      with:
        name: allure-report
        path: target/site/allure-maven-plugin/
    
    - name: Send Email Report
      if: always()
      run: |
        # Create a temporary directory for the report
        mkdir -p temp-report
        
        # Copy the Allure report to the temp directory
        cp -r target/site/allure-maven-plugin/* temp-report/
        
        # Create a zip file of the report
        cd temp-report
        zip -r ../allure-report.zip .
        cd ..
        
        # Send the email with the report
        java -cp target/classes:target/test-classes com.syntheticugc.utils.EmailUtil \
          "SyntheticUGC Test Report - $(date +'%Y-%m-%d %H:%M')" \
          "<html><body><h1>SyntheticUGC Test Report</h1><p>Please find attached the Allure test report.</p></body></html>" \
          allure-report.zip \
          true
      env:
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
    
    - name: Publish Test Results
      uses: mikepenz/action-junit-report@v3
      if: always()
      with:
        report_paths: '**/target/surefire-reports/*.xml'
        check_name: 'Test Results'
        github_token: ${{ secrets.GITHUB_TOKEN }} 